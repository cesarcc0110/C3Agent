# This template is heavily inspired by anthropic's computer use demo
agent:
  type: default
  model:
    name: ollama/qwen2.5-coder:7b
    api_base: https://a01641409--ollama-server-ollamaserver-serve.modal.run
    api_key: any-key
    per_instance_cost_limit: 0   
    total_cost_limit: 0
    max_input_tokens: 0

  templates:
    system_template: |-
      You are a helpful assistant that can interact with a computer to solve tasks.
    instance_template: |-
      <uploaded_files>
      {{working_dir}}
      </uploaded_files>
      I've uploaded a python code repository in the directory {{working_dir}}. Consider the following PR description:

      <pr_description>
      {{problem_statement}}
      </pr_description>

      Your job:
      Implement changes to the code in the repository (excluding any test files) to ensure the requirements described above are fully met.

      Do not edit test files. They have already been prepared to match the desired behavior.

      Steps to follow:

      1. *Understand the PR*
        - Carefully read the PR description and restate what needs to be done in your own words.

      2. *Locate the Relevant Code*
        - Explore the codebase to find the parts that relate to the PR.

      3. *Create a Reproduction Script (if applicable)*
        - Write a simple script (e.g., repro.py) to reproduce the issue or demonstrate the current behavior.

      4. *Execute and Analyze
        - Run the script using python repro.py via the bash tool and describe the observed behavior.

      5. *Implement the Fix*
        - Modify only the source code files (not tests) to solve the problem described in the PR.
        - Follow clean coding practices and avoid introducing regressions.
        - Watch out for common bugs like incorrect ⁠ if __name__ == "__main__" ⁠ conditions, typos, or logic errors.
        Try to give me only the code, without too many explanations

      6. *Re-run the Script*
        - Use the same reproduction script to confirm the fix works and the behavior is now correct.

      7. *Handle Edge Cases*
        - Consider boundary or special input cases. Make sure the fix handles them properly.

      8. *Document Changes*
        - Clearly explain what was changed, why, and how it solves the problem.

      9. *Cleanup*
        - If the ⁠ repro.py ⁠ script was created only for debugging, delete it once the fix is verified.

      Be methodical and detailed in your reasoning. Explain your thought process at each step. The goal is clarity, correctness, and minimal impact.
    next_step_template: |-
      OBSERVATION:
      {{observation}}
    next_step_no_output_template: |-
      Your command ran successfully and did not produce any output.
  tools:
    bundles:
      - path: tools/registry
      - path: tools/edit_anthropic
      - path: tools/review_on_submit_m
    registry_variables:
      USE_FILEMAP: 'true'
      SUBMIT_REVIEW_MESSAGES:
        - |
          Thank you for your work on this issue. Please carefully follow the steps below to help review your changes.

          1. If you made any changes to your code after running the reproduction script, please run the reproduction script again.
            If the reproduction script is failing, please revisit your changes and make sure they are correct.
            If you have already removed your reproduction script, please ignore this step.
          2. Remove your reproduction script (if you haven't done so already).
          3. If you have modified any TEST files, please revert them to the state they had before you started fixing the issue.
            You can do this with `git checkout -- /path/to/test/file.py`. Use below <diff> to find the files you need to revert.
          4. Run the submit command again to confirm.

          Here is a list of all of your changes:

          <diff>
          {{diff}}
          </diff>
    enable_bash_tool: true
    parse_function:
      type: thought_action
  history_processors:
    - type: cache_control
      last_n_messages: 2
